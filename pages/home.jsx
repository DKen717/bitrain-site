import { useEffect, useState } from 'react'
import { useRouter } from 'next/router'
import { Box, Typography, Button, Grid, Paper } from '@mui/material'
import { supabase } from '../src/supabaseClient'
import Link from 'next/link'

export default function InternalHomePage() {
  const [user, setUser] = useState(null)
  const [profile, setProfile] = useState(null)
  const router = useRouter()

  useEffect(() => {
    const getUser = async () => {
      const {
        data: { user }
      } = await supabase.auth.getUser()

      if (!user) {
        router.push('/')
        return
      }

      setUser(user)

      const { data: profileData, error } = await supabase
        .from('users_custom')
        .select('role, company_id')
        .eq('email', user.email)
        .single()

      if (!error) {
        setProfile(profileData)
      } else {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error.message)
      }
    }

    getUser()
  }, [])

  const handleLogout = async () => {
    await supabase.auth.signOut()
    router.push('/')
  }

  return (
    <Box sx={{ p: 4 }}>
      <Typography variant="h5" gutterBottom>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É</Typography>

      {profile && (
        <Grid container spacing={2} sx={{ mt: 2 }}>
          <Grid item>
            <Link href="/dashboard" passHref legacyBehavior>
              <Button variant="outlined">üìä –î—ç—à–±–æ—Ä–¥</Button>
            </Link>
          </Grid>
          <Grid item>
            <Link href="/dislocation" passHref legacyBehavior>
              <Button variant="outlined">üöÇ –î–∏—Å–ª–æ–∫–∞—Ü–∏—è</Button>
            </Link>
          </Grid>

          {profile.role === 'superadmin' && (
            <>
              <Grid item>
                <Link href="/admin/users" passHref legacyBehavior>
                  <Button variant="contained">üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</Button>
                </Link>
              </Grid>
              <Grid item>
                <Link href="/admin/companies" passHref legacyBehavior>
                  <Button variant="contained">üè¢ –ö–æ–º–ø–∞–Ω–∏–∏</Button>
                </Link>
              </Grid>
            </>
          )}
        </Grid>
      )}

      <Box sx={{ mt: 4 }}>
        <Button color="error" onClick={handleLogout}>–í—ã–π—Ç–∏</Button>
      </Box>
    </Box>
  )
}
